package com.vangelnum.wisher.data.repository

import com.vangelnum.wisher.data.api.UserApi
import com.vangelnum.wisher.data.model.UserResponse
import com.vangelnum.wisher.data.model.UserRequest
import com.vangelnum.wisher.domain.model.User
import com.vangelnum.wisher.domain.repository.UserRepository
import javax.inject.Inject

class UserRepositoryImpl @Inject constructor(
private val api: UserApi
) : UserRepository {
    override suspend fun register(userRequest: UserRequest): Result<User> {
        return try {
            val response = api.register(userRequest)
            Result.success(response.toDomain())
        } catch (e: Exception) {
            Result.failure(e)
        }
    }

    override suspend fun getMe(): Result<User> {
        return try {
            val response = api.getMe()
            Result.success(response.toDomain())
        } catch (e: Exception) {
            Result.failure(e)
        }
    }

    private fun UserResponse.toDomain(): User {
        return User(
            id = id,
            name = name,
            email = email,
            avatarUrl = avatarUrl,
            role = role,
            maxWishes = maxWishes
        )
    }
}